var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var GameOverItem_1 = require("./script/GameOverItem");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("script/GameOverItem.ts", GameOverItem_1.default);
    };
    GameConfig.width = 1136;
    GameConfig.height = 640;
    GameConfig.scaleMode = "showall";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "top";
    GameConfig.alignH = "left";
    GameConfig.startScene = "Rank.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = false;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./script/GameOverItem":4}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var UserData_1 = require("./script/model/UserData");
var FriendData_1 = require("./script/model/FriendData");
var Rank_1 = require("./script/Rank");
var GameOver_1 = require("./script/GameOver");
var SurpassOther_1 = require("./script/SurpassOther");
var GoingSurpassOther_1 = require("./script/GoingSurpassOther");
var ProvocationOther_1 = require("./script/ProvocationOther");
var Main = /** @class */ (function () {
    function Main() {
        Laya.isWXOpenDataContext = true;
        Laya.isWXPosMsg = true;
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        console.log("初始化子域");
        this.onConfigLoaded();
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        // Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        window["wx"].getUserInfo({
            openIdList: ['selfOpenId'],
            lang: 'zh_CN',
            success: function (res) {
                var data = res.data;
                if (data[0].openId == "selfOpenId") {
                    UserData_1.default.avatarUrl = data[0].avatarUrl;
                    UserData_1.default.nickName = data[0].nickName;
                }
            }
        });
        FriendData_1.default.instance.getFriends();
        var self = this;
        Laya.Browser.window.wx.onMessage(function (message) {
            if (message.url == "res/atlas/rank.atlas") {
                Laya.MiniFileMgr.ziyuFileData[message.url] = message.data;
                Laya.loader.load("res/atlas/rank.atlas", Laya.Handler.create(this, function () {
                }));
            }
            console.log("messageType:", message['type']);
            switch (message['type']) {
                case "initFrendData":
                    FriendData_1.default.instance.getFriends();
                    break;
                case "openFriendRank": //主界面排行榜-好友排行
                    self.closeOtherView();
                    if (!self.rankView) {
                        self.rankView = new Rank_1.Rank();
                        Laya.stage.addChild(self.rankView);
                    }
                    self.rankView.openView(message.data);
                    break;
                case "closeFriendRank":
                    if (self.rankView) {
                        self.rankView.closeView();
                    }
                    break;
                case "upSelfScore": //更新子域分数显示
                    FriendData_1.default.instance.updateSelfScore(message.data);
                    break;
                case "openGameOver": //
                    if (!self.gameOver) {
                        self.gameOver = new GameOver_1.default();
                        Laya.stage.addChild(self.gameOver);
                    }
                    self.gameOver.openView(message.data);
                    break;
                case "closeGameOver": //
                    if (self.gameOver) {
                        self.gameOver.closeView();
                    }
                    break;
                case "openSurpassOther": //
                    if (!self.surpassOther) {
                        self.surpassOther = new SurpassOther_1.default();
                        Laya.stage.addChild(self.surpassOther);
                    }
                    self.surpassOther.openView(message.data);
                    break;
                case "closeSurpassOther": //
                    if (self.surpassOther) {
                        self.surpassOther.closeView();
                    }
                    break;
                case "openGoingSurpassOther": //
                    if (!self.goingSurpassOther) {
                        self.goingSurpassOther = new GoingSurpassOther_1.default();
                        Laya.stage.addChild(self.goingSurpassOther);
                    }
                    self.goingSurpassOther.openView(message.data);
                    break;
                case "closeGoingSurpassOther": //
                    if (self.goingSurpassOther) {
                        self.goingSurpassOther.closeView();
                    }
                    break;
                case "openProvocationOther": //
                    if (!self.provocationOther) {
                        self.provocationOther = new ProvocationOther_1.default();
                        Laya.stage.addChild(self.provocationOther);
                    }
                    self.provocationOther.openView(message.data);
                    break;
                case "closeProvocationOther": //
                    if (self.provocationOther) {
                        self.provocationOther.closeView();
                    }
                    break;
            }
        }.bind(this));
    };
    Main.prototype.closeOtherView = function () {
        var self = this;
        if (this.rankView) {
            this.rankView.closeView();
        }
        if (self.provocationOther) {
            self.provocationOther.closeView();
        }
        if (self.goingSurpassOther) {
            self.goingSurpassOther.closeView();
        }
        if (self.surpassOther) {
            self.surpassOther.closeView();
        }
        if (self.gameOver) {
            self.gameOver.closeView();
        }
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1,"./script/GameOver":3,"./script/GoingSurpassOther":5,"./script/ProvocationOther":6,"./script/Rank":7,"./script/SurpassOther":9,"./script/model/FriendData":10,"./script/model/UserData":11}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var GameOverItem_1 = require("./GameOverItem");
var FriendData_1 = require("./model/FriendData");
//游戏结束
var GameOver = /** @class */ (function (_super) {
    __extends(GameOver, _super);
    function GameOver() {
        var _this = _super.call(this) || this;
        _this._items = [];
        for (var index = 0; index < 3; index++) {
            // let item = this.getChildByName("item" + index).addComponent(GameoverItem);
            _this._items.push(_this.getChildByName("item" + index));
        }
        return _this;
    }
    GameOver.prototype.openView = function (_type) {
        var _this = this;
        this.visible = true;
        this._items.forEach(function (element) {
            element.getComponent(GameOverItem_1.default).clean();
        });
        FriendData_1.default.instance.getGameOverData(_type, function (list) {
            for (var index = 0; index < list.length; index++) {
                var element = _this._items[index].getComponent(GameOverItem_1.default);
                element.updateItem(list[index], _type);
            }
        });
    };
    GameOver.prototype.closeView = function () {
        this.visible = false;
    };
    return GameOver;
}(layaMaxUI_1.ui.GameOverUI));
exports.default = GameOver;
},{"../ui/layaMaxUI":12,"./GameOverItem":4,"./model/FriendData":10}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FriendData_1 = require("./model/FriendData");
var GameoverItem = /** @class */ (function (_super) {
    __extends(GameoverItem, _super);
    function GameoverItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GameoverItem.prototype.onAwake = function () {
        this.rankLab = this.owner.getChildByName("rankLab");
        this.avatarImg = this.owner.getChildByName("avatarImg");
        this.nameLab = this.owner.getChildByName("nameLab");
        this.scoreLab = this.owner.getChildByName("scoreLab");
    };
    GameoverItem.prototype.updateItem = function (itemData, _type) {
        this.owner.visible = true;
        this.rankLab.text = itemData.rank;
        if (itemData.avatarUrl && itemData.avatarUrl != "") {
            this.avatarImg.skin = itemData.avatarUrl;
        }
        console.log("itemData:", itemData);
        this.nameLab.text = itemData.nickname ? itemData.nickname : "神秘玩家";
        console.log("itemData.score:", itemData.score);
        this.scoreLab.text = itemData.score || 0;
        switch (_type) {
            case FriendData_1.SORTTYPE.LEVEL:
                this.scoreLab.text = itemData.score + "关";
                break;
            case FriendData_1.SORTTYPE.ENDLESS:
                this.scoreLab.text = itemData.score;
                break;
        }
    };
    GameoverItem.prototype.clean = function () {
        this.owner.visible = false;
    };
    return GameoverItem;
}(Laya.Script));
exports.default = GameoverItem;
},{"./model/FriendData":10}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var FriendData_1 = require("./model/FriendData");
var UserData_1 = require("./model/UserData");
//即将超越其它玩家
var GoingSurpassOther = /** @class */ (function (_super) {
    __extends(GoingSurpassOther, _super);
    function GoingSurpassOther() {
        return _super.call(this) || this;
    }
    GoingSurpassOther.prototype.openView = function (_type) {
        var _this = this;
        this.active = true;
        for (var index = 0; index < 2; index++) {
            this["head" + index].visible = false;
        }
        FriendData_1.default.instance.getFriends(_type, function (data) {
            var index = 0;
            for (var i = 0; i < data.length; i++) {
                if (data[i].avatarUrl == UserData_1.default.avatarUrl) {
                    index = i;
                    break;
                }
            }
            if (index == 0) {
                _this.best.visible = true;
                _this.beyondImg.visible = false;
                _this.head0.visible = false;
                _this.head1.visible = false;
                _this.head2.visible = false;
            }
            else {
                _this.best.visible = false;
                _this.beyondImg.visible = true;
            }
            var j = 3;
            for (var i = index - 1; i >= 0; i--) {
                j--;
                if (j < 0) {
                    break;
                }
                _this["head" + j].skin = data[index].avatarUrl;
                _this["head" + j].visible = true;
            }
        });
    };
    GoingSurpassOther.prototype.closeView = function () {
        this.active = false;
        this.visible = false;
    };
    return GoingSurpassOther;
}(layaMaxUI_1.ui.GoingSurpassOtherUI));
exports.default = GoingSurpassOther;
},{"../ui/layaMaxUI":12,"./model/FriendData":10,"./model/UserData":11}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var FriendData_1 = require("./model/FriendData");
var UserData_1 = require("./model/UserData");
//挑衅其它玩家
var ProvocationOther = /** @class */ (function (_super) {
    __extends(ProvocationOther, _super);
    function ProvocationOther() {
        var _this = _super.call(this) || this;
        //挑衅文本
        _this.proClassicTxt = ["我玩到了#分哦，你能赢过我吗？", "是青铜还是王者，请开始你的表演！", "#分以后的风景独好~飘了飘了~"];
        _this.proLevelTxt = ["已经玩到了#关，谁能超越我！", "后面的关卡果然不一样，我等你哦！", "一口气拿下10关，没难度啊！"];
        return _this;
    }
    //type 0：经典，1：关卡
    ProvocationOther.prototype.openView = function (_type) {
        var _this = this;
        var text = "让大家见识一下你的极限！";
        FriendData_1.default.instance.getFriends(_type, function (data) {
            _this.visible = true;
            var rank = -1;
            var length = data.length;
            for (var i = 0; i < length; i++) {
                if (data[i].avatarUrl == UserData_1.default.avatarUrl) {
                    rank = i;
                    break;
                }
            }
            var avatarUrl;
            if (rank == 0 && length > 1) {
                avatarUrl = data[1].avatarUrl;
            }
            else if (rank == -1 || rank == 0) {
                avatarUrl = UserData_1.default.avatarUrl;
            }
            else if (rank > 0) {
                var random = Math.floor(Math.random() * rank);
                if (random < rank) {
                    var index = 0;
                    switch (_type) {
                        case FriendData_1.SORTTYPE.LEVEL:
                            index = Math.floor(Math.random() * _this.proClassicTxt.length);
                            text = _this.proClassicTxt[index];
                            break;
                        default:
                            index = Math.floor(Math.random() * _this.proLevelTxt.length);
                            text = _this.proLevelTxt[index];
                            break;
                    }
                    avatarUrl = data[random].avatarUrl;
                }
            }
            _this.nextHead.skin = avatarUrl;
            _this.provocationOtherText.text = text;
            _this.provocationOtherBg.width = _this.provocationOtherText.width + 40;
        });
    };
    ProvocationOther.prototype.closeView = function () {
        this.visible = false;
    };
    return ProvocationOther;
}(layaMaxUI_1.ui.ProvocationOtherUI));
exports.default = ProvocationOther;
},{"../ui/layaMaxUI":12,"./model/FriendData":10,"./model/UserData":11}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var RankItem_1 = require("./RankItem");
var UserData_1 = require("./model/UserData");
var FriendData_1 = require("./model/FriendData");
var layaMaxUI_1 = require("../ui/layaMaxUI");
var Rank = /** @class */ (function (_super) {
    __extends(Rank, _super);
    function Rank() {
        var _this = _super.call(this) || this;
        _this.selfRankData = {};
        return _this;
    }
    Rank.prototype.onAwake = function () {
        this.rankList.array = [];
        this.rankList.renderHandler = new Laya.Handler(this, this.onRender);
        this.rankList.vScrollBarSkin = "";
        // this.noRank.visible = false;
        this._type = FriendData_1.SORTTYPE.ENDLESS;
        this.selfRankITem = this.selfRank.addComponent(RankItem_1.default);
    };
    Rank.prototype.openView = function (_type) {
        var _this = this;
        this.visible = true;
        this._type = _type || FriendData_1.SORTTYPE.ENDLESS;
        var self = this;
        this.selfRankData = {
            nickname: UserData_1.default.nickName,
            avatarUrl: UserData_1.default.avatarUrl,
        };
        FriendData_1.default.instance.getFriends(_type, function (data) {
            _this.rankList.scrollTo(0);
            data.forEach(function (v, i) {
                if (v.avatarUrl == UserData_1.default.avatarUrl) {
                    self.selfRankData.index = i + 1;
                    self.selfRankData.score = data[i].score;
                }
            });
            _this.rankList.repeatY = data.length;
            _this.rankList.array = data;
            _this.rankList.refresh();
            _this.setMyRankInfo();
        });
    };
    Rank.prototype.setMyRankInfo = function () {
        this.selfRankITem.updateItem(this.selfRankData, this._type);
        this.selfRank.visible = true;
    };
    Rank.prototype.onRender = function (cell, index) {
        var item = cell.getComponent(RankItem_1.default);
        if (!item) {
            item = cell.addComponent(RankItem_1.default);
        }
        cell.dataSource.index = index + 1;
        item.updateItem(cell.dataSource, this._type);
    };
    Rank.prototype.closeView = function () {
        // this.visible = false;
        this.destroy();
    };
    return Rank;
}(layaMaxUI_1.ui.RankUI));
exports.Rank = Rank;
},{"../ui/layaMaxUI":12,"./RankItem":8,"./model/FriendData":10,"./model/UserData":11}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FriendData_1 = require("./model/FriendData");
var RankItem = /** @class */ (function (_super) {
    __extends(RankItem, _super);
    function RankItem() {
        return _super.call(this) || this;
    }
    RankItem.prototype.onAwake = function () {
        this.rankImg = this.owner.getChildByName("rankImg");
        this.rankLab = this.owner.getChildByName("rankLab");
        this.avatarImg = this.owner.getChildByName("avatarImg");
        this.nameLab = this.owner.getChildByName("nameLab");
        this.scoreLab = this.owner.getChildByName("scoreLab");
    };
    RankItem.prototype.updateItem = function (itemData, _type) {
        this.owner.active = true;
        this.rankImg.visible = false;
        this.rankLab.text = itemData.index || "未上榜";
        switch (itemData.index) {
            case 1:
                // case 2:
                // case 3:
                this.rankLab.text = "";
                this.rankImg.skin = "rank/img_rank" + itemData.index + ".png";
                this.rankImg.visible = true;
                break;
        }
        this.avatarImg.skin = "rank/img_default_avatar.png"; //默认头像
        if (itemData.avatarUrl && itemData.avatarUrl != "") {
            var avatarUrl = itemData.avatarUrl.replace("/132", "/46");
            this.avatarImg.skin = avatarUrl;
        }
        this.nameLab.text = itemData.nickname ? itemData.nickname : "神秘玩家";
        switch (_type) {
            case FriendData_1.SORTTYPE.LEVEL:
                this.scoreLab.text = itemData.score + "关";
                break;
            // case SORTTYPE.ENDLESS:
            default:
                this.scoreLab.text = itemData.score;
                break;
        }
    };
    RankItem.prototype.clean = function () {
        this.owner.active = false;
    };
    return RankItem;
}(Laya.Script));
exports.default = RankItem;
},{"./model/FriendData":10}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var FriendData_1 = require("./model/FriendData");
var UserData_1 = require("./model/UserData");
//超越其它玩家
var SurpassOther = /** @class */ (function (_super) {
    __extends(SurpassOther, _super);
    function SurpassOther() {
        return _super.call(this) || this;
    }
    SurpassOther.prototype.openView = function (_d) {
        var _this = this;
        var _s = _d.val;
        var _type = _d._type;
        this.visible = true;
        this.nextHead.visible = false;
        var val = 0;
        FriendData_1.default.instance.getFriends(_type, function (data) {
            var index = -1;
            for (var i = data.length - 1; i >= 0; i--) {
                val = _type == FriendData_1.SORTTYPE.ENDLESS ? data[i].score : data[i].level;
                if (val > _s) {
                    if (data[i].avatarUrl != UserData_1.default.avatarUrl) {
                        index = i;
                    }
                    else {
                        index = i - 1;
                    }
                    break;
                }
            }
            var curSurpass = data[index];
            if (index == -1 || !curSurpass) {
                return;
            }
            //存在可以超越的好友
            _this.nextHead.visible = true;
            _this.nextHead.skin = curSurpass.avatarUrl;
        });
    };
    SurpassOther.prototype.closeView = function () {
        this.nextHead.visible = false;
        this.visible = false;
    };
    return SurpassOther;
}(layaMaxUI_1.ui.SurpassOtherUI));
exports.default = SurpassOther;
},{"../ui/layaMaxUI":12,"./model/FriendData":10,"./model/UserData":11}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var UserData_1 = require("./UserData");
var SORTTYPE;
(function (SORTTYPE) {
    SORTTYPE[SORTTYPE["LEVEL"] = 0] = "LEVEL";
    SORTTYPE[SORTTYPE["ENDLESS"] = 1] = "ENDLESS";
})(SORTTYPE = exports.SORTTYPE || (exports.SORTTYPE = {}));
var FriendData = /** @class */ (function () {
    function FriendData() {
        //一小时刷新一次好友数据
        this.preFriendsTime = 0;
        this.refreshTime = 1 * 60 * 60 * 1000;
        //好友数据
        this.friends = [];
    }
    //好友数据
    FriendData.prototype.getFriends = function (_type, callback) {
        var _this = this;
        var self = this;
        if (this.needRefresh(self.preFriendsTime)) {
            window["wx"].getFriendCloudStorage({
                keyList: ["score", "level"],
                success: function (res) {
                    self.preFriendsTime = Laya.Browser.now();
                    self.friends = [];
                    for (var index = 0; index < res.data.length; index++) {
                        var v = res.data[index];
                        if (v.KVDataList.length > 0) {
                            var _score = 0;
                            for (var i = 0; i < v.KVDataList.length; i++) {
                                if (v.KVDataList[i].key == "score") {
                                    _score = parseInt(v.KVDataList[i].value);
                                }
                            }
                            self.friends.push({
                                nickname: v.nickname,
                                avatarUrl: v.avatarUrl,
                                score: _score,
                            });
                            // if(!self.avatarCache[v.avatarUrl] && _score > 1){
                            //     let txt = new Laya.Texture();
                            //     txt.load(v.avatarUrl.replace("/132","/46"));
                            //     self.avatarCache[v.avatarUrl] = txt;
                            // }
                        }
                    }
                    if (callback) {
                        _type == SORTTYPE.LEVEL ? _this.sortLevel() : _this.sortScore();
                        callback(self.friends);
                    }
                }
            });
        }
        else {
            if (callback) {
                _type == SORTTYPE.LEVEL ? this.sortLevel() : this.sortScore();
                callback(self.friends);
            }
        }
    };
    FriendData.prototype.getGameOverData = function (_type, callback) {
        this.getFriends(_type, function (data) {
            var list = [];
            switch (data.length) {
                case 1:
                case 2:
                case 3:
                    list = data.concat();
                    for (var i = 0; i < list.length; i++) {
                        list[i].rank = i + 1;
                    }
                    break;
                default:
                    for (var i = 0; i < data.length; i++) {
                        if (data[i].avatarUrl == UserData_1.default.avatarUrl) {
                            if (i > 0 && i < data.length - 1) {
                                list.push(data[i - 1]);
                                list[0].rank = i;
                                list.push(data[i]);
                                list[1].rank = i + 1;
                                list.push(data[i + 1]);
                                list[2].rank = i + 2;
                            }
                            else if (i == 0) {
                                if (i != data.length - 1) {
                                    list.push(data[i]);
                                    list[0].rank = i + 1;
                                    list.push(data[i + 1]);
                                    list[1].rank = i + 2;
                                    list.push(data[i + 2]);
                                    list[2].rank = i + 3;
                                }
                            }
                            else if (i == data.length - 1) {
                                list.push(data[i - 2]);
                                list[0].rank = i - 1;
                                list.push(data[i - 1]);
                                list[1].rank = i;
                                list.push(data[i]);
                                list[2].rank = i + 1;
                            }
                            break;
                        }
                    }
                    break;
            }
            callback(list);
        });
    };
    FriendData.prototype.updateSelfScore = function (score) {
        for (var i = 0; i < this.friends.length; i++) {
            if (this.friends[i].avatarUrl == UserData_1.default.avatarUrl) {
                this.friends[i].score = score;
                break;
            }
        }
    };
    FriendData.prototype.sortScore = function () {
        this.friends.sort(function (a, b) {
            if (a.score > b.score)
                return -1;
            if (a.score < b.score)
                return 1;
            return 1;
        });
    };
    FriendData.prototype.sortLevel = function () {
        this.friends.sort(function (a, b) {
            if (a.level > b.level)
                return -1;
            if (a.level < b.level)
                return 1;
            return 1;
        });
    };
    FriendData.prototype.needRefresh = function (pre) {
        return Laya.Browser.now() - pre > this.refreshTime;
    };
    // //缓存头像
    // public static avatarCache:any = {};
    FriendData.instance = new FriendData();
    return FriendData;
}());
exports.default = FriendData;
},{"./UserData":11}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var UserData = /** @class */ (function () {
    function UserData() {
    }
    /**我自己的头像url */
    UserData.avatarUrl = "";
    UserData.nickName = "";
    UserData.avatarUrlGroup = "";
    UserData.nickNameGroup = "";
    return UserData;
}());
exports.default = UserData;
},{}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ui;
(function (ui) {
    var GameOverUI = /** @class */ (function (_super) {
        __extends(GameOverUI, _super);
        function GameOverUI() {
            return _super.call(this) || this;
        }
        GameOverUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.createView(GameOverUI.uiView);
        };
        GameOverUI.uiView = { "type": "Scene", "props": { "width": 630, "height": 286 }, "compId": 2, "child": [{ "type": "Box", "props": { "y": 0, "x": 0, "width": 210, "var": "item0", "renderType": "render", "name": "item0", "height": 298 }, "compId": 4, "child": [{ "type": "Image", "props": { "y": 128, "x": 122, "width": 100, "var": "avatarImg", "skin": "rank/img_default_avatar.png", "name": "avatarImg", "mouseEnabled": false, "height": 100, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 6 }, { "type": "Image", "props": { "y": 128, "x": 122, "width": 100, "name": "mask", "mouseEnabled": false, "height": 100, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 10 }, { "type": "Label", "props": { "y": 209, "x": 105, "var": "nameLab", "text": "111", "name": "nameLab", "mouseEnabled": false, "fontSize": 20, "font": "SimHei", "color": "#000000", "anchorY": 0.5, "anchorX": 0.5, "align": "center" }, "compId": 7 }, { "type": "Label", "props": { "y": 37, "x": 122, "width": 76, "var": "rankLab", "name": "rankLab", "mouseEnabled": false, "height": 37, "fontSize": 34, "font": "SimHei", "color": "#000000", "centerX": 0, "bold": true, "anchorY": 0.5, "anchorX": 0.5, "align": "center" }, "compId": 8 }, { "type": "Label", "props": { "y": 260, "x": 105, "width": 104, "var": "scoreLab", "text": "111", "name": "scoreLab", "mouseEnabled": false, "height": 45, "fontSize": 30, "font": "SimHei", "color": "#000000", "bold": true, "anchorY": 0.5, "anchorX": 0.5, "align": "center" }, "compId": 9 }, { "type": "Script", "props": { "runtime": "script/GameOverItem.ts" }, "compId": 23 }] }, { "type": "Box", "props": { "y": 0, "x": 210, "width": 210, "var": "item1", "renderType": "render", "name": "item1", "height": 298 }, "compId": 11, "child": [{ "type": "Image", "props": { "y": 128, "x": 122, "width": 100, "skin": "rank/img_default_avatar.png", "name": "avatarImg", "mouseEnabled": false, "height": 100, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 12 }, { "type": "Image", "props": { "y": 128, "x": 122, "width": 100, "name": "mask", "mouseEnabled": false, "height": 100, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 13 }, { "type": "Label", "props": { "y": 209, "x": 105, "text": "111", "name": "nameLab", "mouseEnabled": false, "fontSize": 20, "font": "SimHei", "color": "#000000", "anchorY": 0.5, "anchorX": 0.5, "align": "center" }, "compId": 14 }, { "type": "Label", "props": { "y": 37, "x": 122, "width": 76, "name": "rankLab", "mouseEnabled": false, "height": 37, "fontSize": 34, "font": "SimHei", "color": "#000000", "centerX": 0, "bold": true, "anchorY": 0.5, "anchorX": 0.5, "align": "center" }, "compId": 15 }, { "type": "Label", "props": { "y": 260, "x": 105, "width": 104, "text": "111", "name": "scoreLab", "mouseEnabled": false, "height": 45, "fontSize": 30, "font": "SimHei", "color": "#000000", "bold": true, "anchorY": 0.5, "anchorX": 0.5, "align": "center" }, "compId": 16 }, { "type": "Script", "props": { "runtime": "script/GameOverItem.ts" }, "compId": 24 }] }, { "type": "Box", "props": { "y": 0, "x": 420, "width": 210, "var": "item2", "renderType": "render", "name": "item2", "height": 298 }, "compId": 17, "child": [{ "type": "Image", "props": { "y": 128, "x": 122, "width": 100, "skin": "rank/img_default_avatar.png", "name": "avatarImg", "mouseEnabled": false, "height": 100, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 18 }, { "type": "Image", "props": { "y": 128, "x": 122, "width": 100, "name": "mask", "mouseEnabled": false, "height": 100, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 19 }, { "type": "Label", "props": { "y": 209, "x": 105, "text": "111", "name": "nameLab", "mouseEnabled": false, "fontSize": 20, "font": "SimHei", "color": "#000000", "anchorY": 0.5, "anchorX": 0.5, "align": "center" }, "compId": 20 }, { "type": "Label", "props": { "y": 37, "x": 122, "width": 76, "name": "rankLab", "mouseEnabled": false, "height": 37, "fontSize": 34, "font": "SimHei", "color": "#000000", "centerX": 0, "bold": true, "anchorY": 0.5, "anchorX": 0.5, "align": "center" }, "compId": 21 }, { "type": "Label", "props": { "y": 260, "x": 105, "width": 104, "text": "111", "name": "scoreLab", "mouseEnabled": false, "height": 45, "fontSize": 30, "font": "SimHei", "color": "#000000", "bold": true, "anchorY": 0.5, "anchorX": 0.5, "align": "center" }, "compId": 22 }, { "type": "Script", "props": { "runtime": "script/GameOverItem.ts" }, "compId": 25 }] }], "loadList": ["rank/img_default_avatar.png"], "loadList3D": [] };
        return GameOverUI;
    }(Laya.Scene));
    ui.GameOverUI = GameOverUI;
    var GoingSurpassOtherUI = /** @class */ (function (_super) {
        __extends(GoingSurpassOtherUI, _super);
        function GoingSurpassOtherUI() {
            return _super.call(this) || this;
        }
        GoingSurpassOtherUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.createView(GoingSurpassOtherUI.uiView);
        };
        GoingSurpassOtherUI.uiView = { "type": "Scene", "props": { "width": 750, "height": 91 }, "compId": 2, "child": [{ "type": "Sprite", "props": { "y": -1, "x": 3, "texture": "rank/bg_gosuperpass.png" }, "compId": 9 }, { "type": "Image", "props": { "y": 30, "x": 201, "width": 128, "var": "beyondImg", "skin": "rank/img_superpass.png", "height": 31 }, "compId": 11 }, { "type": "Image", "props": { "y": 20, "x": 350, "width": 50, "var": "head0", "skin": "rank/img_default_avatar.png", "name": "head0", "height": 50, "centerX": 0 }, "compId": 3 }, { "type": "Image", "props": { "y": 20, "width": 50, "var": "head1", "skin": "rank/img_default_avatar.png", "name": "head1", "height": 50, "centerX": 58 }, "compId": 4 }, { "type": "Image", "props": { "y": 20, "width": 50, "var": "head2", "skin": "rank/img_default_avatar.png", "name": "head2", "height": 50, "centerX": 116 }, "compId": 5 }, { "type": "Text", "props": { "y": 33, "x": 267, "var": "best", "text": "当前无可超越的好友", "name": "best", "fontSize": 24, "font": "SimHei", "color": "#ffffff", "runtime": "laya.display.Text" }, "compId": 12 }], "loadList": ["rank/bg_gosuperpass.png", "rank/img_superpass.png", "rank/img_default_avatar.png"], "loadList3D": [] };
        return GoingSurpassOtherUI;
    }(Laya.Scene));
    ui.GoingSurpassOtherUI = GoingSurpassOtherUI;
    var ProvocationOtherUI = /** @class */ (function (_super) {
        __extends(ProvocationOtherUI, _super);
        function ProvocationOtherUI() {
            return _super.call(this) || this;
        }
        ProvocationOtherUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.createView(ProvocationOtherUI.uiView);
        };
        ProvocationOtherUI.uiView = { "type": "Scene", "props": { "width": 66, "height": 66 }, "compId": 2, "child": [{ "type": "Image", "props": { "width": 66, "var": "nextHead", "skin": "rank/img_default_avatar.png", "name": "nextHead", "height": 66 }, "compId": 3 }, { "type": "Image", "props": { "y": 2, "x": 85, "width": 440, "var": "provocationOtherBg", "skin": "rank/bg_fight.png", "sizeGrid": "0,15,0,31", "name": "bg", "height": 62 }, "compId": 4, "child": [{ "type": "Text", "props": { "y": 15, "x": 22, "var": "provocationOtherText", "valign": "middle", "text": "让大家见识一下你的极限！", "name": "provocationOtherText", "fontSize": 26, "color": "#e6e6e6", "runtime": "laya.display.Text" }, "compId": 5 }] }], "loadList": ["rank/img_default_avatar.png", "rank/bg_fight.png"], "loadList3D": [] };
        return ProvocationOtherUI;
    }(Laya.Scene));
    ui.ProvocationOtherUI = ProvocationOtherUI;
    var RankUI = /** @class */ (function (_super) {
        __extends(RankUI, _super);
        function RankUI() {
            return _super.call(this) || this;
        }
        RankUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.createView(RankUI.uiView);
        };
        RankUI.uiView = { "type": "Scene", "props": { "width": 561, "top": 0, "right": 0, "left": 0, "height": 828, "bottom": 0 }, "compId": 2, "child": [{ "type": "List", "props": { "y": 0, "x": 0, "width": 560, "var": "rankList", "spaceY": 18, "repeatX": 1, "height": 700, "elasticEnabled": false }, "compId": 4, "child": [{ "type": "Box", "props": { "y": 0, "x": 0, "renderType": "render", "height": 84 }, "compId": 12, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 560, "skin": "rank/bg_item.png", "sizeGrid": "8,10,9,10", "name": "bg", "height": 82 }, "compId": 5 }, { "type": "Image", "props": { "y": 5, "x": 9, "width": 61, "skin": "rank/img_rank1.png", "name": "rankImg", "height": 73 }, "compId": 6 }, { "type": "Label", "props": { "y": 41, "x": 38, "width": 76, "valign": "middle", "text": "1", "strokeColor": "#2c11f1", "overflow": "visible", "name": "rankLab", "height": 40, "fontSize": 32, "color": "#8d430d", "bold": true, "anchorY": 0.5, "anchorX": 0.5, "align": "center" }, "compId": 10 }, { "type": "Image", "props": { "y": 7, "x": 80, "width": 68, "skin": "rank/img_default_avatar.png", "name": "avatarImg", "height": 68 }, "compId": 7 }, { "type": "Label", "props": { "y": 34, "x": 162, "width": 110, "valign": "middle", "overflow": "hidden", "name": "nameLab", "height": 24, "fontSize": 24, "color": "#010101", "align": "center" }, "compId": 9 }, { "type": "Label", "props": { "y": 41, "x": 538, "width": 109, "valign": "middle", "text": "1", "overflow": "visible", "name": "scoreLab", "height": 40, "fontSize": 36, "color": "#000000", "bold": true, "anchorY": 0.5, "anchorX": 1, "align": "right" }, "compId": 11 }] }] }, { "type": "Image", "props": { "y": 739, "x": 0, "width": 560, "visible": false, "var": "selfRank", "skin": "rank/bg_myItem.png", "sizeGrid": "8,10,9,10", "height": 82 }, "compId": 13, "child": [{ "type": "Image", "props": { "y": 5, "x": 9, "width": 61, "skin": "rank/img_rank1.png", "name": "rankImg", "height": 73 }, "compId": 27 }, { "type": "Label", "props": { "y": 41, "x": 38, "width": 76, "valign": "middle", "text": "1", "strokeColor": "#2c11f1", "overflow": "visible", "name": "rankLab", "height": 40, "fontSize": 32, "color": "#8d430d", "bold": true, "anchorY": 0.5, "anchorX": 0.5, "align": "center" }, "compId": 28 }, { "type": "Image", "props": { "y": 7, "x": 80, "width": 68, "skin": "rank/img_default_avatar.png", "name": "avatarImg", "height": 68 }, "compId": 29 }, { "type": "Label", "props": { "y": 29, "x": 164, "width": 222, "overflow": "hidden", "name": "nameLab", "height": 24, "fontSize": 24, "color": "#010101" }, "compId": 30 }, { "type": "Label", "props": { "y": 41, "x": 429, "width": 109, "valign": "middle", "text": "1", "overflow": "visible", "name": "scoreLab", "height": 40, "fontSize": 36, "color": "#000000", "bold": true, "anchorY": 0.5, "anchorX": 0, "align": "right" }, "compId": 31 }] }], "loadList": ["rank/bg_item.png", "rank/img_rank1.png", "rank/img_default_avatar.png", "rank/bg_myItem.png"], "loadList3D": [] };
        return RankUI;
    }(Laya.Scene));
    ui.RankUI = RankUI;
    var SurpassOtherUI = /** @class */ (function (_super) {
        __extends(SurpassOtherUI, _super);
        function SurpassOtherUI() {
            return _super.call(this) || this;
        }
        SurpassOtherUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.createView(SurpassOtherUI.uiView);
        };
        SurpassOtherUI.uiView = { "type": "Scene", "props": { "width": 60, "height": 60 }, "compId": 2, "child": [{ "type": "Image", "props": { "width": 60, "var": "nextHead", "skin": "rank/img_default_avatar.png", "name": "nextHead", "height": 60 }, "compId": 3 }], "loadList": ["rank/img_default_avatar.png"], "loadList3D": [] };
        return SurpassOtherUI;
    }(Laya.Scene));
    ui.SurpassOtherUI = SurpassOtherUI;
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
